usage: polygraphy debug repeat [-h] [-v] [-q]
                               [--verbosity VERBOSITY [VERBOSITY ...]]
                               [--silent]
                               [--log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]]
                               [--log-file LOG_FILE] [--check ...]
                               [--fail-code FAIL_CODES [FAIL_CODES ...] |
                               --ignore-fail-code IGNORE_FAIL_CODES
                               [IGNORE_FAIL_CODES ...]]
                               [--fail-regex FAIL_REGEX [FAIL_REGEX ...]]
                               [--show-output | --hide-fail-output]
                               [--artifacts ARTIFACTS [ARTIFACTS ...]]
                               [--art-dir DIR]
                               [--iter-info ITERATION_INFO_PATH] --until UNTIL
                               [--load-debug-replay LOAD_DEBUG_REPLAY]
                               [--save-debug-replay SAVE_DEBUG_REPLAY]

[EXPERIMENTAL] Run an arbitrary command repeatedly, sorting generated artifacts
into `good` and `bad` directories.

options:
  -h, --help            show this help message and exit

Logging:
  Options related to logging and debug output

  -v, --verbose         Increase logging verbosity. Specify multiple times for
                        higher verbosity
  -q, --quiet           Decrease logging verbosity. Specify multiple times for
                        lower verbosity
  --verbosity VERBOSITY [VERBOSITY ...]
                        The logging verbosity to use. Takes precedence over
                        the `-v` and `-q` options, and unlike them, allows you
                        to control per-path verbosity. Verbosity values should
                        come from Polygraphy's logging verbosities defined in
                        the `Logger` class and are case-insensitive. For
                        example: `--verbosity INFO` or `--verbosity verbose`.
                        To specify per-path verbosity, use the format:
                        `<path>:<verbosity>`. For example: `--verbosity
                        backend/trt:INFO backend/trt/loader.py:VERBOSE`. Paths
                        should be relative to the `polygraphy/` directory. For
                        example, `polygraphy/backend` should be specified with
                        just `backend`. The most closely matching path is used
                        to determine verbosity. For example, with:
                        `--verbosity warning backend:info
                        backend/trt:verbose`, a file under
                        `polygraphy/comparator` would use `WARNING` verbosity,
                        one under `backend/onnx` would use `INFO`, and one
                        under `backend/trt` would use `VERBOSE`.
  --silent              Disable all output
  --log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]
                        Format for log messages: {{'timestamp': Include
                        timestamp, 'line-info': Include file and line number,
                        'no-colors': Disable colors}}
  --log-file LOG_FILE   Path to a file where Polygraphy logging output should
                        be written. This may not include logging output from
                        dependencies, like TensorRT or ONNX-Runtime.

Pass/Fail Reporting:
  Options related to reporting pass/fail status during iterative debugging.

  --check ..., --check-inference ...
                        A command to check the model. When this is omitted, an
                        interactive debugging session is started instead.By
                        default an exit status of 0 is treated as a 'pass'
                        whereas any other exit status is treated as a 'fail'.
  --fail-code FAIL_CODES [FAIL_CODES ...], --fail-returncode FAIL_CODES [FAIL_CODES ...]
                        The return code(s) from the --check command to count
                        as failures. If this is provided, any other return
                        code will be counted as a success.
  --ignore-fail-code IGNORE_FAIL_CODES [IGNORE_FAIL_CODES ...], --ignore-fail-returncode IGNORE_FAIL_CODES [IGNORE_FAIL_CODES ...]
                        The return code(s) from the --check command to ignore
                        as failures.
  --fail-regex FAIL_REGEX [FAIL_REGEX ...]
                        Regular expression denoting an error in the check
                        command's output. The command is only considered a
                        failure if a matching string is found in the command's
                        output. This can be useful to distinguish among
                        multiple types of failures. Can be specified multiple
                        times to match different regular expressions, in which
                        case any match counts as a failure. When combined with
                        --fail-code, only iterations whose return code is
                        considered a failure are checked for regular
                        expressions.
  --show-output         Show output from the --check command even for passing
                        iterations. By default, output from passing iterations
                        is captured.
  --hide-fail-output    Suppress output from the --check command for failing
                        iterations. By default, output from failing iterations
                        is displayed.

Artifact Sorting:
  Options related to sorting artifacts into good/bad directories based on pass/fail status.

  --artifacts ARTIFACTS [ARTIFACTS ...]
                        Path(s) of artifacts to sort. These will be moved into
                        'good' and 'bad' directories based on the exit status
                        of the `--check` command and suffixed with an
                        iteration number, timestamp and return code.
  --art-dir DIR, --artifacts-dir DIR
                        The directory in which to move artifacts and sort them
                        into 'good' and 'bad'. Defaults to a directory named
                        `polygraphy_artifacts` in the current directory.

Iterative Debugging:
  Options related to iteratively debugging.

  --iter-info ITERATION_INFO_PATH, --iteration-info ITERATION_INFO_PATH
                        Path to write a JSON file containing information about
                        the current iteration. This will include an
                        'iteration' key whose value is the current iteration
                        number.
  --until UNTIL         Controls when to stop running. Choices are: ['good',
                        'bad', int]. 'good' will keep running until the first
                        'good' run. 'bad' will run until the first 'bad' run.
                        An integer can be specified to run a set number of
                        iterations.
  --load-debug-replay LOAD_DEBUG_REPLAY
                        Path from which to load a debug replay. A replay file
                        includes information on the results of some or all
                        iterations, allowing you to skip those iterations.
  --save-debug-replay SAVE_DEBUG_REPLAY
                        Path at which to save a debug replay, which includes
                        information on the results of debugging iterations.
                        The replay can be used with `--load-debug-replay` to
                        skip iterations during subsequent debugging sessions.
                        The replay is saved after the first iteration and
                        overwritten with an updated replay during each
                        iteration thereafter. This will also write a second
                        replay file with a suffix of `_skip_current`, which is
                        written before the iteration completes, and treats it
                        as a failure. In cases where the iteration crashes,
                        loading this replay file provides a means of skipping
                        over the crash. Defaults to
                        `polygraphy_debug_replay.json` in the current
                        directory.
