usage: polygraphy inspect [-h] [-v] [-q]
                          [--verbosity VERBOSITY [VERBOSITY ...]] [--silent]
                          [--log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]]
                          [--log-file LOG_FILE]
                          {model,data,tactics,capability,diff-tactics,sparsity}
                          ...

View information about various types of files.

options:
  -h, --help            show this help message and exit

Logging:
  Options related to logging and debug output

  -v, --verbose         Increase logging verbosity. Specify multiple times for
                        higher verbosity
  -q, --quiet           Decrease logging verbosity. Specify multiple times for
                        lower verbosity
  --verbosity VERBOSITY [VERBOSITY ...]
                        The logging verbosity to use. Takes precedence over
                        the `-v` and `-q` options, and unlike them, allows you
                        to control per-path verbosity. Verbosity values should
                        come from Polygraphy's logging verbosities defined in
                        the `Logger` class and are case-insensitive. For
                        example: `--verbosity INFO` or `--verbosity verbose`.
                        To specify per-path verbosity, use the format:
                        `<path>:<verbosity>`. For example: `--verbosity
                        backend/trt:INFO backend/trt/loader.py:VERBOSE`. Paths
                        should be relative to the `polygraphy/` directory. For
                        example, `polygraphy/backend` should be specified with
                        just `backend`. The most closely matching path is used
                        to determine verbosity. For example, with:
                        `--verbosity warning backend:info
                        backend/trt:verbose`, a file under
                        `polygraphy/comparator` would use `WARNING` verbosity,
                        one under `backend/onnx` would use `INFO`, and one
                        under `backend/trt` would use `VERBOSE`.
  --silent              Disable all output
  --log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]
                        Format for log messages: {{'timestamp': Include
                        timestamp, 'line-info': Include file and line number,
                        'no-colors': Disable colors}}
  --log-file LOG_FILE   Path to a file where Polygraphy logging output should
                        be written. This may not include logging output from
                        dependencies, like TensorRT or ONNX-Runtime.

Inspection Subtools:
  {model,data,tactics,capability,diff-tactics,sparsity}
    model               Display information about a model, including inputs
                        and outputs, as well as layers and their attributes.
    data                Display information about inference inputs and outputs
                        saved from Polygraphy's Comparator.run() (for example,
                        outputs saved by `--save-outputs` or inputs saved by
                        `--save-inputs` from `polygraphy run`).
    tactics             Display the contents of Polygraphy tactic replay
                        files, such as the ones generated by `--save-tactics`,
                        in a human readable format.
    capability          Determine the capability of TensorRT to run an ONNX
                        graph. Graph will be either partitioned into supported
                        and unsupported subgraphs or only analyzed in terms of
                        statically checked errors.
    diff-tactics        Determine potentially bad TensorRT tactics given sets
                        of good and bad Polygraphy tactic replay files, such
                        as those saved by `--save-tactics`.
    sparsity            [EXPERIMENTAL] Display information about whether each
                        weight tensor in an ONNX model follows a 2:4
                        structured sparsity pattern.
