usage: polygraphy surgeon insert [-h] [-v] [-q]
                                 [--verbosity VERBOSITY [VERBOSITY ...]]
                                 [--silent]
                                 [--log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]]
                                 [--log-file LOG_FILE] --inputs INPUTS
                                 [INPUTS ...] --outputs OUTPUTS [OUTPUTS ...]
                                 --op OP [--name NAME]
                                 [--attrs ATTRS [ATTRS ...]]
                                 [--shape-inference]
                                 [--no-onnxruntime-shape-inference]
                                 [--external-data-dir EXTERNAL_DATA_DIR]
                                 [--ignore-external-data] [--fp-to-fp16] -o
                                 SAVE_ONNX
                                 [--save-external-data [EXTERNAL_DATA_PATH]]
                                 [--external-data-size-threshold EXTERNAL_DATA_SIZE_THRESHOLD]
                                 [--no-save-all-tensors-to-one-file]
                                 model_file

[EXPERIMENTAL] Insert a single node into an ONNX model with the specified inputs and outputs.
Any existing subgraph between the inputs and outputs is replaced.

options:
  -h, --help            show this help message and exit

Logging:
  Options related to logging and debug output

  -v, --verbose         Increase logging verbosity. Specify multiple times for
                        higher verbosity
  -q, --quiet           Decrease logging verbosity. Specify multiple times for
                        lower verbosity
  --verbosity VERBOSITY [VERBOSITY ...]
                        The logging verbosity to use. Takes precedence over
                        the `-v` and `-q` options, and unlike them, allows you
                        to control per-path verbosity. Verbosity values should
                        come from Polygraphy's logging verbosities defined in
                        the `Logger` class and are case-insensitive. For
                        example: `--verbosity INFO` or `--verbosity verbose`.
                        To specify per-path verbosity, use the format:
                        `<path>:<verbosity>`. For example: `--verbosity
                        backend/trt:INFO backend/trt/loader.py:VERBOSE`. Paths
                        should be relative to the `polygraphy/` directory. For
                        example, `polygraphy/backend` should be specified with
                        just `backend`. The most closely matching path is used
                        to determine verbosity. For example, with:
                        `--verbosity warning backend:info
                        backend/trt:verbose`, a file under
                        `polygraphy/comparator` would use `WARNING` verbosity,
                        one under `backend/onnx` would use `INFO`, and one
                        under `backend/trt` would use `VERBOSE`.
  --silent              Disable all output
  --log-format {timestamp,line-info,no-colors} [{timestamp,line-info,no-colors} ...]
                        Format for log messages: {{'timestamp': Include
                        timestamp, 'line-info': Include file and line number,
                        'no-colors': Disable colors}}
  --log-file LOG_FILE   Path to a file where Polygraphy logging output should
                        be written. This may not include logging output from
                        dependencies, like TensorRT or ONNX-Runtime.

Inserted Node:
  Options related to the node to insert.

  --inputs INPUTS [INPUTS ...]
                        The names of input tensors for the new node. Order
                        will be preserved. Format: --inputs <name>. For
                        example: --inputs name0 name1
  --outputs OUTPUTS [OUTPUTS ...]
                        The names of output tensors for the new node. Order
                        will be preserved. If an output tensor is also
                        specified as an input, a new tensor will be generated
                        for the outputFormat: --outputs <name>. For example:
                        --outputs name0 name1
  --op OP               The ONNX op to use for the new node
  --name NAME           The name to use for the new node
  --attrs ATTRS [ATTRS ...]
                        Attributes to set in the new node. Format: --attrs
                        <name>=value. For example: --attrs axis=1 keepdims=1.
                        Attributes of type: float, int, str, and lists of
                        these types are supported. Numbers including a decimal
                        point will always be parsed as floats, and quoted
                        values (e.g. --attrs name='53') will always be parsed
                        as strings. Values enclosed in brackets (e.g. --attrs
                        axes=[0,1]) will be parsed as lists.

Model:
  Options related to the model

  model_file            Path to the model

ONNX Shape Inference:
  Options related to ONNX shape inference.

  --shape-inference, --do-shape-inference
                        Enable ONNX shape inference when loading the model
  --no-onnxruntime-shape-inference
                        Disable using ONNX-Runtime's shape inference
                        utilities. This will force Polygraphy to use
                        `onnx.shape_inference` instead. Note that ONNX-
                        Runtime's shape inference utilities may be more
                        performant and memory-efficient.

ONNX Model Loading:
  Options related to loading ONNX models.

  --external-data-dir EXTERNAL_DATA_DIR, --load-external-data EXTERNAL_DATA_DIR, --ext EXTERNAL_DATA_DIR
                        Path to a directory containing external data for the
                        model. Generally, this is only required if the
                        external data is not stored in the model directory.
  --ignore-external-data
                        Ignore external data and just load the model structure
                        without any weights. The model will be usable only for
                        purposes that don't require weights, such as
                        extracting subgraphs or inspecting model structure.
                        This can be useful in cases where external data is not
                        available.
  --fp-to-fp16          Convert all floating point tensors in an ONNX model to
                        16-bit precision. This is *not* needed in order to use
                        TensorRT's fp16 precision, but may be useful for other
                        backends. Requires onnxmltools.

ONNX Model Saving:
  Options related to saving ONNX models.

  -o SAVE_ONNX, --output SAVE_ONNX
                        Path to save the ONNX model
  --save-external-data [EXTERNAL_DATA_PATH], --external-data-path [EXTERNAL_DATA_PATH]
                        Whether to save weight data in external file(s). To
                        use a non-default path, supply the desired path as an
                        argument. This is always a relative path; external
                        data is always written to the same directory as the
                        model.
  --external-data-size-threshold EXTERNAL_DATA_SIZE_THRESHOLD
                        The size threshold, in bytes, above which tensor data
                        will be stored in the external file. Tensors smaller
                        that this threshold will remain in the ONNX file.
                        Optionally, use a `K`, `M`, or `G` suffix to indicate
                        KiB, MiB, or GiB respectively. For example,
                        `--external-data-size-threshold=16M` is equivalent to
                        `--external-data-size-threshold=16777216`. Has no
                        effect if `--save-external-data` is not set. Defaults
                        to 1024 bytes.
  --no-save-all-tensors-to-one-file
                        Do not save all tensors to a single file when saving
                        external data. Has no effect if `--save-external-data`
                        is not set
